Project 2 - Blogging Platform

🚀 Overview & approach

Stack: MERN — React + Redux (frontend), Node.js + Express (API), MongoDB (database).

Editor: React-Quill for rich text.

Images: Cloudinary (store images) + multer for uploads.

Auth: JWT (access tokens). Passwords hashed with bcrypt.

Extras: Likes, Comments, Categories & Tags, Search, Admin dashboard, Profile with authored blogs.

Dev tools: Postman, GitHub, Cloudinary account, dotenv for env vars.

Design: Tailwind CSS; responsive, mobile-first.

I recommend this order:

Backend — auth, users, blog CRUD, comments, likes, search & filters, admin endpoints.

Frontend — Auth UI, blog editor, list & detail pages, likes/comments, profile, admin dashboard.

Integrate Cloudinary for images.

Testing & deployment.


❓Structure
backend/
├─ package.json
├─ .env
├─ server.js
├─ config/
│  └─ db.js
├─ models/
│  ├─ User.js
│  ├─ Blog.js
│  └─ Comment.js
├─ middleware/
│  ├─ authMiddleware.js
│  └─ errorMiddleware.js
├─ controllers/
│  ├─ authController.js
│  ├─ userController.js
│  ├─ blogController.js
│  └─ commentController.js
├─ routes/
│  ├─ authRoutes.js
│  ├─ userRoutes.js
│  ├─ blogRoutes.js
│  └─ commentRoutes.js
└─ utils/
   └─ cloudinary.js


frontend/
├─ src/
│  ├─ api/
│  │  └─ axios.js
│  ├─ features/
│  │  └─ auth/
│  │     └─ authSlice.js
│  ├─ components/
│  │  ├─ Header.jsx
│  │  └─ Footer.jsx
│  ├─ pages/
│  │  ├─ Home.jsx
│  │  ├─ Login.jsx
│  │  ├─ Register.jsx
│  │  └─ Profile.jsx
│  ├─ App.jsx
│  ├─ main.jsx
│  └─ index.css


